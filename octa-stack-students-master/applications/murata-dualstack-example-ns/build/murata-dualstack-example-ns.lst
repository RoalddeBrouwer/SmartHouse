ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"murata-dualstack-example-ns.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.section	.text.print_temp_hum,"ax",%progbits
  19              		.align	1
  20              		.global	print_temp_hum
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	print_temp_hum:
  28              	.LFB131:
  29              		.file 1 "../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c"
   1:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE BEGIN Header */
   2:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /**
   3:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   ******************************************************************************
   4:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @file           : main.c
   5:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @brief          : Main program body
   6:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   ******************************************************************************
   7:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * This notice applies to any and all portions of this file
   8:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * USER CODE END. Other portions of this file, whether 
  10:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * inserted by the user or by software development tools
  11:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * are owned by their respective copyright owners.
  12:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *
  13:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * All rights reserved.
  15:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *
  16:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * Redistribution and use in source and binary forms, with or without 
  17:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * modification, are permitted, provided that the following conditions are met:
  18:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *
  19:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    this list of conditions and the following disclaimer.
  21:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    and/or other materials provided with the distribution.
  24:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    contributors to this software may be used to endorse or promote products 
  26:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    derived from this software without specific written permission.
  27:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 2


  30:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    this license is void and will automatically terminate your rights under 
  32:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *    this license. 
  33:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *
  34:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   *
  47:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   ******************************************************************************
  48:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   */
  49:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE END Header */
  50:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  51:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* Includes ------------------------------------------------------------------*/
  52:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #include "murata-dualstack-example-ns.h"
  53:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #include "LSM303AGRSensor.h"
  54:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #include "sht31.h"
  55:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* Private includes ----------------------------------------------------------*/
  56:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE BEGIN Includes */
  57:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #include "murata.h"
  58:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  59:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE END Includes */
  60:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  61:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* Private typedef -----------------------------------------------------------*/
  62:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE BEGIN PTD */
  63:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  64:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE END PTD */
  65:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  66:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* Private define ------------------------------------------------------------*/
  67:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE BEGIN PD */
  68:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #define IWDG_INTERVAL           5    //seconds
  69:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #define LORAWAN_INTERVAL        60   //seconds
  70:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #define DASH7_INTERVAL          20  //seconds
  71:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** #define MODULE_CHECK_INTERVAL   3600 //seconds
  72:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  73:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE END PD */
  74:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  75:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* Private macro -------------------------------------------------------------*/
  76:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE BEGIN PM */
  77:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  78:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE END PM */
  79:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  80:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* Private user code ---------------------------------------------------------*/
  81:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE BEGIN 0 */
  82:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** uint16_t LoRaWAN_Counter = 0;
  83:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** uint16_t DASH7_Counter = 0;
  84:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** uint8_t murata_init = 0;
  85:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** uint64_t short_UID;
  86:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** uint8_t murata_data_ready = 0;
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 3


  87:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** float SHTData[2];
  88:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** volatile _Bool temperatureflag=0;
  89:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** volatile _Bool buttonFlag=0;
  90:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE END 0 */
  91:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
  92:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /**
  93:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @brief  The application entry point.
  94:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @retval int
  95:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   */
  96:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** int main(void)
  97:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** {
  98:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN 1 */
  99:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 100:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END 1 */
 101:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 102:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* MCU Configuration--------------------------------------------------------*/
 103:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 104:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   HAL_Init();
 106:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 107:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN Init */
 108:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 109:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END Init */
 110:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 111:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* Configure the system clock */
 112:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   SystemClock_Config();
 113:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 114:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN SysInit */
 115:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 116:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END SysInit */
 117:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 118:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* Initialize the platform, OCTA in this case */
 119:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   Initialize_Platform();
 120:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN 2 */
 121:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 122:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   // Get Unique ID of octa
 123:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   short_UID = get_UID();
 124:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 125:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   // Print Welcome Message
 126:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   LSM303AGR_setI2CInterface(&common_I2C);
 127:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   setI2CInterface_SHT31(&common_I2C);
 128:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   SHT31_begin(); 
 129:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   LSM303AGR_init();
 130:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printWelcome();
 131:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   
 132:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   // LORAWAN
 133:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   murata_init = Murata_Initialize(short_UID, 0);
 134:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 135:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   if (murata_init)
 136:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   {
 137:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     printf("Murata dualstack module init OK\r\n\r\n");
 138:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 139:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END 2 */
 140:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 141:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 142:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* add mutexes, ... */
 143:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 4


 144:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   // TX MUTEX ensuring no transmits are happening at the same time
 145:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 146:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END RTOS_MUTEX */
 147:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 148:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 149:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* add semaphores, ... */
 150:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END RTOS_SEMAPHORES */
 151:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 152:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* Create the thread(s) */
 153:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 154:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 155:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* start timers, add new ones, ... */
 156:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 157:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   //feed IWDG every 5 seconds
 158:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   IWDG_feed(NULL);
 159:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 160:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END RTOS_TIMERS */
 161:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 162:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN RTOS_THREADS */
 163:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* add threads, ... */
 164:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 165:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END RTOS_THREADS */
 166:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 167:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 168:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* add queues, ... */
 169:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END RTOS_QUEUES */
 170:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 171:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* Start scheduler */
 172:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 173:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* We should never get here as control is now taken by the scheduler */
 174:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 175:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* Infinite loop */
 176:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   uint8_t counter = 0;
 177:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   uint8_t use_lora = 1;
 178:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN WHILE */
 179:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   temperatureflag=1;  //measure the temperature once and blink red led.
 180:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   while (1)
 181:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   { 
 182:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     IWDG_feed(NULL);
 183:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 184:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****      if (temperatureflag==1) {
 185:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     temp_hum_measurement();
 186:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     temperatureflag=0; 
 187:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_GPIO_TogglePin(OCTA_RLED_GPIO_Port, OCTA_RLED_Pin);
 188:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_Delay(1000);
 189:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_GPIO_TogglePin(OCTA_RLED_GPIO_Port, OCTA_RLED_Pin);
 190:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 191:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     if(buttonFlag==1){
 192:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****      // Dash7_send(NULL);
 193:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       buttonFlag=0;
 194:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       Dash7_send(NULL);
 195:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       printf("Button pressed\r\n");
 196:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 197:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 198:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     if(murata_data_ready)
 199:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 200:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       printf("processing murata fifo\r\n");
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 5


 201:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       murata_data_ready = !Murata_process_fifo();
 202:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 203:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     
 204:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     // SEND 5 D7 messages, every 10 sec.
 205:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     // Afterwards, send 3 LoRaWAN messages, every minute
 206:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     /* if(DASH7_Counter<5)
 207:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 208:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       if(counter==DASH7_INTERVAL)
 209:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       {
 210:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         Dash7_send(NULL);
 211:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         counter = 0;
 212:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       }
 213:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 214:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     else
 215:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     { 
 216:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       if(LoRaWAN_Counter == 0)
 217:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         Murata_LoRaWAN_Join();
 218:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       if(LoRaWAN_Counter<3)
 219:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       {
 220:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         if (counter == LORAWAN_INTERVAL)
 221:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         {
 222:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****           LoRaWAN_send(NULL);
 223:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****           counter = 0;
 224:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         }
 225:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       }
 226:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       if(LoRaWAN_Counter == 3)
 227:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       {
 228:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         //reset counters to restart flow
 229:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         DASH7_Counter = 0;
 230:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         LoRaWAN_Counter = 0;
 231:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       }
 232:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 233:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****    
 234:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     counter++; */
 235:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_Delay(1000);
 236:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     
 237:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 238:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     /* USER CODE END WHILE */
 239:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     
 240:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     /* USER CODE BEGIN 3 */
 241:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 242:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END 3 */
 243:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 244:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 245:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void temp_hum_measurement(void){
 246:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   SHT31_get_temp_hum(SHTData);
 247:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   print_temp_hum();
 248:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 249:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void print_temp_hum(void){
  30              		.loc 1 249 26 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 6


  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 250:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("\r\n");
  41              		.loc 1 250 3 view .LVU1
  42 0002 0C4C     		ldr	r4, .L3
  43 0004 2046     		mov	r0, r4
  44 0006 FFF7FEFF 		bl	puts
  45              	.LVL0:
 251:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("Temperature: %.2f °C  \r\n", SHTData[0]);
  46              		.loc 1 251 3 view .LVU2
  47              		.loc 1 251 48 is_stmt 0 view .LVU3
  48 000a 0B4D     		ldr	r5, .L3+4
  49              		.loc 1 251 3 view .LVU4
  50 000c 2868     		ldr	r0, [r5]	@ float
  51 000e FFF7FEFF 		bl	__aeabi_f2d
  52              	.LVL1:
  53 0012 0246     		mov	r2, r0
  54 0014 0B46     		mov	r3, r1
  55 0016 0948     		ldr	r0, .L3+8
  56 0018 FFF7FEFF 		bl	printf
  57              	.LVL2:
 252:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("Humidity: %.2f %% \r\n", SHTData[1]);
  58              		.loc 1 252 3 is_stmt 1 view .LVU5
  59 001c 6868     		ldr	r0, [r5, #4]	@ float
  60 001e FFF7FEFF 		bl	__aeabi_f2d
  61              	.LVL3:
  62 0022 0246     		mov	r2, r0
  63 0024 0B46     		mov	r3, r1
  64 0026 0648     		ldr	r0, .L3+12
  65 0028 FFF7FEFF 		bl	printf
  66              	.LVL4:
 253:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("\r\n");
  67              		.loc 1 253 3 view .LVU6
  68 002c 2046     		mov	r0, r4
  69 002e FFF7FEFF 		bl	puts
  70              	.LVL5:
 254:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
  71              		.loc 1 254 1 is_stmt 0 view .LVU7
  72 0032 38BD     		pop	{r3, r4, r5, pc}
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 0034 00000000 		.word	.LC0
  77 0038 00000000 		.word	SHTData
  78 003c 04000000 		.word	.LC1
  79 0040 20000000 		.word	.LC2
  80              		.cfi_endproc
  81              	.LFE131:
  83              		.section	.text.temp_hum_measurement,"ax",%progbits
  84              		.align	1
  85              		.global	temp_hum_measurement
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu fpv4-sp-d16
  91              	temp_hum_measurement:
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 7


  92              	.LFB130:
 245:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   SHT31_get_temp_hum(SHTData);
  93              		.loc 1 245 32 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 08B5     		push	{r3, lr}
  98              	.LCFI1:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
 246:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   print_temp_hum();
 102              		.loc 1 246 3 view .LVU9
 103 0002 0348     		ldr	r0, .L7
 104 0004 FFF7FEFF 		bl	SHT31_get_temp_hum
 105              	.LVL6:
 247:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 106              		.loc 1 247 3 view .LVU10
 107 0008 FFF7FEFF 		bl	print_temp_hum
 108              	.LVL7:
 248:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void print_temp_hum(void){
 109              		.loc 1 248 1 is_stmt 0 view .LVU11
 110 000c 08BD     		pop	{r3, pc}
 111              	.L8:
 112 000e 00BF     		.align	2
 113              	.L7:
 114 0010 00000000 		.word	SHTData
 115              		.cfi_endproc
 116              	.LFE130:
 118              		.section	.text.LoRaWAN_send,"ax",%progbits
 119              		.align	1
 120              		.global	LoRaWAN_send
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	LoRaWAN_send:
 127              	.LVL8:
 128              	.LFB132:
 255:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 256:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void LoRaWAN_send(void const *argument)
 257:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** {
 129              		.loc 1 257 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		.loc 1 257 1 is_stmt 0 view .LVU13
 134 0000 00B5     		push	{lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 14, -4
 138 0002 83B0     		sub	sp, sp, #12
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 258:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   if (murata_init)
 141              		.loc 1 258 3 is_stmt 1 view .LVU14
 142              		.loc 1 258 7 is_stmt 0 view .LVU15
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 8


 143 0004 124B     		ldr	r3, .L15
 144 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 145              		.loc 1 258 6 view .LVU16
 146 0008 EBB1     		cbz	r3, .L10
 147              	.LBB2:
 259:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   {
 260:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     uint8_t loraMessage[5];
 148              		.loc 1 260 5 is_stmt 1 view .LVU17
 261:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     uint8_t i = 0;
 149              		.loc 1 261 5 view .LVU18
 150              	.LVL9:
 262:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //uint16 counter to uint8 array (little endian)
 263:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //counter (large) type byte
 264:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     loraMessage[i++] = 0x14;
 151              		.loc 1 264 5 view .LVU19
 152              		.loc 1 264 22 is_stmt 0 view .LVU20
 153 000a 1423     		movs	r3, #20
 154 000c 8DF80030 		strb	r3, [sp]
 265:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     loraMessage[i++] = LoRaWAN_Counter;
 155              		.loc 1 265 5 is_stmt 1 view .LVU21
 156              		.loc 1 265 22 is_stmt 0 view .LVU22
 157 0010 104B     		ldr	r3, .L15+4
 158 0012 1B88     		ldrh	r3, [r3]
 159              	.LVL10:
 160              		.loc 1 265 22 view .LVU23
 161 0014 8DF80130 		strb	r3, [sp, #1]
 266:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     loraMessage[i++] = LoRaWAN_Counter >> 8;
 162              		.loc 1 266 5 is_stmt 1 view .LVU24
 163              	.LVL11:
 164              		.loc 1 266 22 is_stmt 0 view .LVU25
 165 0018 1B0A     		lsrs	r3, r3, #8
 166 001a 8DF80230 		strb	r3, [sp, #2]
 267:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //osMutexWait(txMutexId, osWaitForever);
 268:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     if(!Murata_LoRaWAN_Send((uint8_t *)loraMessage, i))
 167              		.loc 1 268 5 is_stmt 1 view .LVU26
 168              		.loc 1 268 9 is_stmt 0 view .LVU27
 169 001e 0321     		movs	r1, #3
 170 0020 6846     		mov	r0, sp
 171              	.LVL12:
 172              		.loc 1 268 9 view .LVU28
 173 0022 FFF7FEFF 		bl	Murata_LoRaWAN_Send
 174              	.LVL13:
 175              		.loc 1 268 7 view .LVU29
 176 0026 50B9     		cbnz	r0, .L11
 269:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 270:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       murata_init++;
 177              		.loc 1 270 7 is_stmt 1 view .LVU30
 178              		.loc 1 270 18 is_stmt 0 view .LVU31
 179 0028 094A     		ldr	r2, .L15
 180 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 181 002c 0133     		adds	r3, r3, #1
 182 002e 1370     		strb	r3, [r2]
 271:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       if(murata_init == 10)
 183              		.loc 1 271 7 is_stmt 1 view .LVU32
 184              	.L12:
 272:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         murata_init == 0;
 273:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 9


 274:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     else
 275:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 276:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       murata_init = 1;
 277:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 278:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //BLOCK TX MUTEX FOR 3s
 279:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //osDelay(3000);
 280:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //osMutexRelease(txMutexId);
 281:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     LoRaWAN_Counter++;
 185              		.loc 1 281 5 discriminator 1 view .LVU33
 186              		.loc 1 281 20 is_stmt 0 discriminator 1 view .LVU34
 187 0030 084A     		ldr	r2, .L15+4
 188 0032 1388     		ldrh	r3, [r2]
 189 0034 0133     		adds	r3, r3, #1
 190 0036 1380     		strh	r3, [r2]	@ movhi
 191              	.LVL14:
 192              	.L9:
 193              		.loc 1 281 20 discriminator 1 view .LVU35
 194              	.LBE2:
 282:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 283:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   else{
 284:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     printf("murata not initialized, not sending\r\n");
 285:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 286:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 195              		.loc 1 286 1 view .LVU36
 196 0038 03B0     		add	sp, sp, #12
 197              	.LCFI4:
 198              		.cfi_remember_state
 199              		.cfi_def_cfa_offset 4
 200              		@ sp needed
 201 003a 5DF804FB 		ldr	pc, [sp], #4
 202              	.LVL15:
 203              	.L11:
 204              	.LCFI5:
 205              		.cfi_restore_state
 206              	.LBB3:
 276:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 207              		.loc 1 276 7 is_stmt 1 view .LVU37
 276:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 208              		.loc 1 276 19 is_stmt 0 view .LVU38
 209 003e 044B     		ldr	r3, .L15
 210 0040 0122     		movs	r2, #1
 211 0042 1A70     		strb	r2, [r3]
 212 0044 F4E7     		b	.L12
 213              	.LVL16:
 214              	.L10:
 276:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 215              		.loc 1 276 19 view .LVU39
 216              	.LBE3:
 217              	.LBB4:
 284:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 218              		.loc 1 284 5 is_stmt 1 view .LVU40
 219 0046 0448     		ldr	r0, .L15+8
 220              	.LVL17:
 284:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 221              		.loc 1 284 5 is_stmt 0 view .LVU41
 222 0048 FFF7FEFF 		bl	puts
 223              	.LVL18:
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 10


 224              	.LBE4:
 225              		.loc 1 286 1 view .LVU42
 226 004c F4E7     		b	.L9
 227              	.L16:
 228 004e 00BF     		.align	2
 229              	.L15:
 230 0050 00000000 		.word	.LANCHOR0
 231 0054 00000000 		.word	.LANCHOR1
 232 0058 00000000 		.word	.LC3
 233              		.cfi_endproc
 234              	.LFE132:
 236              		.section	.text.Dash7_send,"ax",%progbits
 237              		.align	1
 238              		.global	Dash7_send
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	Dash7_send:
 245              	.LVL19:
 246              	.LFB133:
 287:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 288:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void Dash7_send(void const *argument)
 289:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** {
 247              		.loc 1 289 1 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		.loc 1 289 1 is_stmt 0 view .LVU44
 252 0000 08B5     		push	{r3, lr}
 253              	.LCFI6:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
 256              		.cfi_offset 14, -4
 290:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   if (murata_init)
 257              		.loc 1 290 3 is_stmt 1 view .LVU45
 258              		.loc 1 290 7 is_stmt 0 view .LVU46
 259 0002 0C4B     		ldr	r3, .L23
 260 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261              		.loc 1 290 6 view .LVU47
 262 0006 8BB1     		cbz	r3, .L18
 263              	.LBB5:
 291:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   {
 292:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     uint8_t dash7Message[5];
 264              		.loc 1 292 5 is_stmt 1 view .LVU48
 293:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     uint8_t i = 0;
 265              		.loc 1 293 5 view .LVU49
 266              	.LVL20:
 294:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //uint16 counter to uint8 array (little endian)
 295:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //counter (large) type byte
 296:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****    /* dash7Message[i++] = 0x14;
 297:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     dash7Message[i++] = DASH7_Counter;
 298:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     dash7Message[i++] = DASH7_Counter >> 8;*/
 299:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //osMutexWait(txMutexId, osWaitForever);
 300:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     dash7Message[i++] = SHTData[0];
 267              		.loc 1 300 5 view .LVU50
 301:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     if(!Murata_Dash7_Send((uint8_t *)&SHTData[0], sizeof(float)))
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 11


 268              		.loc 1 301 5 view .LVU51
 269              		.loc 1 301 9 is_stmt 0 view .LVU52
 270 0008 0421     		movs	r1, #4
 271 000a 0B48     		ldr	r0, .L23+4
 272              	.LVL21:
 273              		.loc 1 301 9 view .LVU53
 274 000c FFF7FEFF 		bl	Murata_Dash7_Send
 275              	.LVL22:
 276              		.loc 1 301 7 view .LVU54
 277 0010 40B9     		cbnz	r0, .L19
 302:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 303:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       murata_init++;
 278              		.loc 1 303 7 is_stmt 1 view .LVU55
 279              		.loc 1 303 18 is_stmt 0 view .LVU56
 280 0012 084A     		ldr	r2, .L23
 281 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 282 0016 0133     		adds	r3, r3, #1
 283 0018 1370     		strb	r3, [r2]
 304:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       if(murata_init == 10)
 284              		.loc 1 304 7 is_stmt 1 view .LVU57
 285              	.L20:
 305:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         murata_init == 0;
 306:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 307:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     else
 308:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 309:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       murata_init = 1;
 310:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 311:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //BLOCK TX MUTEX FOR 3s
 312:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //osDelay(3000);
 313:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     //osMutexRelease(txMutexId);
 314:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     DASH7_Counter++;
 286              		.loc 1 314 5 discriminator 1 view .LVU58
 287              		.loc 1 314 18 is_stmt 0 discriminator 1 view .LVU59
 288 001a 084A     		ldr	r2, .L23+8
 289 001c 1388     		ldrh	r3, [r2]
 290 001e 0133     		adds	r3, r3, #1
 291 0020 1380     		strh	r3, [r2]	@ movhi
 292              	.LVL23:
 293              	.L17:
 294              		.loc 1 314 18 discriminator 1 view .LVU60
 295              	.LBE5:
 315:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 316:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   else{
 317:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     printf("murata not initialized, not sending\r\n");
 318:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 319:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 296              		.loc 1 319 1 view .LVU61
 297 0022 08BD     		pop	{r3, pc}
 298              	.LVL24:
 299              	.L19:
 300              	.LBB6:
 309:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 301              		.loc 1 309 7 is_stmt 1 view .LVU62
 309:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 302              		.loc 1 309 19 is_stmt 0 view .LVU63
 303 0024 034B     		ldr	r3, .L23
 304 0026 0122     		movs	r2, #1
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 12


 305 0028 1A70     		strb	r2, [r3]
 306 002a F6E7     		b	.L20
 307              	.LVL25:
 308              	.L18:
 309:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 309              		.loc 1 309 19 view .LVU64
 310              	.LBE6:
 311              	.LBB7:
 317:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 312              		.loc 1 317 5 is_stmt 1 view .LVU65
 313 002c 0448     		ldr	r0, .L23+12
 314              	.LVL26:
 317:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 315              		.loc 1 317 5 is_stmt 0 view .LVU66
 316 002e FFF7FEFF 		bl	puts
 317              	.LVL27:
 318              	.LBE7:
 319              		.loc 1 319 1 view .LVU67
 320 0032 F6E7     		b	.L17
 321              	.L24:
 322              		.align	2
 323              	.L23:
 324 0034 00000000 		.word	.LANCHOR0
 325 0038 00000000 		.word	SHTData
 326 003c 00000000 		.word	.LANCHOR2
 327 0040 00000000 		.word	.LC3
 328              		.cfi_endproc
 329              	.LFE133:
 331              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 332              		.align	1
 333              		.global	HAL_UART_RxCpltCallback
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	HAL_UART_RxCpltCallback:
 340              	.LVL28:
 341              	.LFB134:
 320:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 321:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** // UART RX CALLBACK
 322:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 323:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** {
 342              		.loc 1 323 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		.loc 1 323 1 is_stmt 0 view .LVU69
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI7:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 324:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   if (huart == &P1_UART)
 352              		.loc 1 324 3 is_stmt 1 view .LVU70
 353              		.loc 1 324 6 is_stmt 0 view .LVU71
 354 0002 054B     		ldr	r3, .L29
 355 0004 8342     		cmp	r3, r0
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 13


 356 0006 00D0     		beq	.L28
 357              	.LVL29:
 358              	.L25:
 325:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   {
 326:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     Murata_rxCallback();
 327:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     murata_data_ready = 1;
 328:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 329:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 359              		.loc 1 329 1 view .LVU72
 360 0008 08BD     		pop	{r3, pc}
 361              	.LVL30:
 362              	.L28:
 326:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     murata_data_ready = 1;
 363              		.loc 1 326 5 is_stmt 1 view .LVU73
 364 000a FFF7FEFF 		bl	Murata_rxCallback
 365              	.LVL31:
 327:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 366              		.loc 1 327 5 view .LVU74
 327:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 367              		.loc 1 327 23 is_stmt 0 view .LVU75
 368 000e 034B     		ldr	r3, .L29+4
 369 0010 0122     		movs	r2, #1
 370 0012 1A70     		strb	r2, [r3]
 371              		.loc 1 329 1 view .LVU76
 372 0014 F8E7     		b	.L25
 373              	.L30:
 374 0016 00BF     		.align	2
 375              	.L29:
 376 0018 00000000 		.word	P1_UART
 377 001c 00000000 		.word	.LANCHOR3
 378              		.cfi_endproc
 379              	.LFE134:
 381              		.section	.text.vApplicationIdleHook,"ax",%progbits
 382              		.align	1
 383              		.global	vApplicationIdleHook
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	vApplicationIdleHook:
 390              	.LFB135:
 330:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 331:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void vApplicationIdleHook(){
 391              		.loc 1 331 28 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 332:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   #if LOW_POWER
 333:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFE);
 334:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   #endif
 335:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 396              		.loc 1 335 1 view .LVU78
 397 0000 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE135:
 401              		.section	.text.printWelcome,"ax",%progbits
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 14


 402              		.align	1
 403              		.global	printWelcome
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	printWelcome:
 410              	.LFB136:
 336:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 337:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void printWelcome(void)
 338:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** {
 411              		.loc 1 338 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 30B5     		push	{r4, r5, lr}
 416              	.LCFI8:
 417              		.cfi_def_cfa_offset 12
 418              		.cfi_offset 4, -12
 419              		.cfi_offset 5, -8
 420              		.cfi_offset 14, -4
 421 0002 83B0     		sub	sp, sp, #12
 422              	.LCFI9:
 423              		.cfi_def_cfa_offset 24
 339:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("\r\n");
 424              		.loc 1 339 3 view .LVU80
 425 0004 1A4C     		ldr	r4, .L37
 426 0006 2046     		mov	r0, r4
 427 0008 FFF7FEFF 		bl	puts
 428              	.LVL32:
 340:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("*****************************************\r\n");
 429              		.loc 1 340 3 view .LVU81
 430 000c 194D     		ldr	r5, .L37+4
 431 000e 2846     		mov	r0, r5
 432 0010 FFF7FEFF 		bl	puts
 433              	.LVL33:
 341:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("Murata Dual Stack example without scheduler\r\n");
 434              		.loc 1 341 3 view .LVU82
 435 0014 1848     		ldr	r0, .L37+8
 436 0016 FFF7FEFF 		bl	puts
 437              	.LVL34:
 342:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("*****************************************\r\n");
 438              		.loc 1 342 3 view .LVU83
 439 001a 2846     		mov	r0, r5
 440 001c FFF7FEFF 		bl	puts
 441              	.LVL35:
 343:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("\r\n");
 442              		.loc 1 343 3 view .LVU84
 443 0020 2046     		mov	r0, r4
 444 0022 FFF7FEFF 		bl	puts
 445              	.LVL36:
 344:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   char UIDString[sizeof(short_UID)];
 446              		.loc 1 344 3 view .LVU85
 345:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   memcpy(UIDString, &short_UID, sizeof(short_UID));
 447              		.loc 1 345 3 view .LVU86
 448 0026 154B     		ldr	r3, .L37+12
 449 0028 6C46     		mov	r4, sp
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 15


 450 002a 93E80300 		ldm	r3, {r0, r1}
 451 002e 84E80300 		stm	r4, {r0, r1}
 346:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("octa ID: ");
 452              		.loc 1 346 3 view .LVU87
 453 0032 1348     		ldr	r0, .L37+16
 454 0034 FFF7FEFF 		bl	printf
 455              	.LVL37:
 347:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   for (const char* p = UIDString; *p; ++p)
 456              		.loc 1 347 3 view .LVU88
 457              	.LBB8:
 458              		.loc 1 347 8 view .LVU89
 459              	.L33:
 460              		.loc 1 347 35 is_stmt 0 discriminator 1 view .LVU90
 461 0038 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 462              		.loc 1 347 3 discriminator 1 view .LVU91
 463 003a 21B1     		cbz	r1, .L36
 348:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 349:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****         printf("%02x", *p);
 464              		.loc 1 349 9 is_stmt 1 discriminator 3 view .LVU92
 465 003c 1148     		ldr	r0, .L37+20
 466 003e FFF7FEFF 		bl	printf
 467              	.LVL38:
 347:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   for (const char* p = UIDString; *p; ++p)
 468              		.loc 1 347 39 is_stmt 0 discriminator 3 view .LVU93
 469 0042 0134     		adds	r4, r4, #1
 470              	.LVL39:
 347:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   for (const char* p = UIDString; *p; ++p)
 471              		.loc 1 347 39 discriminator 3 view .LVU94
 472 0044 F8E7     		b	.L33
 473              	.L36:
 347:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   for (const char* p = UIDString; *p; ++p)
 474              		.loc 1 347 39 discriminator 3 view .LVU95
 475              	.LBE8:
 350:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 351:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printf("\r\n\r\n");
 476              		.loc 1 351 3 is_stmt 1 view .LVU96
 477 0046 1048     		ldr	r0, .L37+24
 478 0048 FFF7FEFF 		bl	puts
 479              	.LVL40:
 352:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   HAL_GPIO_TogglePin(OCTA_BLED_GPIO_Port, OCTA_BLED_Pin);
 480              		.loc 1 352 3 view .LVU97
 481 004c 0F4C     		ldr	r4, .L37+28
 482              	.LVL41:
 483              		.loc 1 352 3 is_stmt 0 view .LVU98
 484 004e 4FF40041 		mov	r1, #32768
 485 0052 2046     		mov	r0, r4
 486 0054 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 487              	.LVL42:
 353:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   HAL_Delay(2000);
 488              		.loc 1 353 3 is_stmt 1 view .LVU99
 489 0058 4FF4FA60 		mov	r0, #2000
 490 005c FFF7FEFF 		bl	HAL_Delay
 491              	.LVL43:
 354:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   HAL_GPIO_TogglePin(OCTA_BLED_GPIO_Port, OCTA_BLED_Pin);
 492              		.loc 1 354 3 view .LVU100
 493 0060 4FF40041 		mov	r1, #32768
 494 0064 2046     		mov	r0, r4
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 16


 495 0066 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 496              	.LVL44:
 355:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 497              		.loc 1 355 1 is_stmt 0 view .LVU101
 498 006a 03B0     		add	sp, sp, #12
 499              	.LCFI10:
 500              		.cfi_def_cfa_offset 12
 501              		@ sp needed
 502 006c 30BD     		pop	{r4, r5, pc}
 503              	.L38:
 504 006e 00BF     		.align	2
 505              	.L37:
 506 0070 00000000 		.word	.LC0
 507 0074 00000000 		.word	.LC4
 508 0078 2C000000 		.word	.LC5
 509 007c 00000000 		.word	short_UID
 510 0080 5C000000 		.word	.LC6
 511 0084 68000000 		.word	.LC7
 512 0088 70000000 		.word	.LC8
 513 008c 000C0048 		.word	1207962624
 514              		.cfi_endproc
 515              	.LFE136:
 517              		.section	.text.main,"ax",%progbits
 518              		.align	1
 519              		.global	main
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv4-sp-d16
 525              	main:
 526              	.LFB129:
  97:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN 1 */
 527              		.loc 1 97 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531 0000 38B5     		push	{r3, r4, r5, lr}
 532              	.LCFI11:
 533              		.cfi_def_cfa_offset 16
 534              		.cfi_offset 3, -16
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 105:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 538              		.loc 1 105 3 view .LVU103
 539 0002 FFF7FEFF 		bl	HAL_Init
 540              	.LVL45:
 112:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 541              		.loc 1 112 3 view .LVU104
 542 0006 FFF7FEFF 		bl	SystemClock_Config
 543              	.LVL46:
 119:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN 2 */
 544              		.loc 1 119 3 view .LVU105
 545 000a FFF7FEFF 		bl	Initialize_Platform
 546              	.LVL47:
 123:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 547              		.loc 1 123 3 view .LVU106
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 17


 123:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 548              		.loc 1 123 15 is_stmt 0 view .LVU107
 549 000e FFF7FEFF 		bl	get_UID
 550              	.LVL48:
 123:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 551              		.loc 1 123 13 view .LVU108
 552 0012 2F4C     		ldr	r4, .L49
 553 0014 C4E90001 		strd	r0, [r4]
 126:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   setI2CInterface_SHT31(&common_I2C);
 554              		.loc 1 126 3 is_stmt 1 view .LVU109
 555 0018 2E4D     		ldr	r5, .L49+4
 556 001a 2846     		mov	r0, r5
 557 001c FFF7FEFF 		bl	LSM303AGR_setI2CInterface
 558              	.LVL49:
 127:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   SHT31_begin(); 
 559              		.loc 1 127 3 view .LVU110
 560 0020 2846     		mov	r0, r5
 561 0022 FFF7FEFF 		bl	setI2CInterface_SHT31
 562              	.LVL50:
 128:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   LSM303AGR_init();
 563              		.loc 1 128 3 view .LVU111
 564 0026 FFF7FEFF 		bl	SHT31_begin
 565              	.LVL51:
 129:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   printWelcome();
 566              		.loc 1 129 3 view .LVU112
 567 002a FFF7FEFF 		bl	LSM303AGR_init
 568              	.LVL52:
 130:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   
 569              		.loc 1 130 3 view .LVU113
 570 002e FFF7FEFF 		bl	printWelcome
 571              	.LVL53:
 133:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 572              		.loc 1 133 3 view .LVU114
 133:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 573              		.loc 1 133 17 is_stmt 0 view .LVU115
 574 0032 0022     		movs	r2, #0
 575 0034 D4E90001 		ldrd	r0, [r4]
 576 0038 FFF7FEFF 		bl	Murata_Initialize
 577              	.LVL54:
 133:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 578              		.loc 1 133 15 view .LVU116
 579 003c 264B     		ldr	r3, .L49+8
 580 003e 1870     		strb	r0, [r3]
 135:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   {
 581              		.loc 1 135 3 is_stmt 1 view .LVU117
 135:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   {
 582              		.loc 1 135 6 is_stmt 0 view .LVU118
 583 0040 30B9     		cbnz	r0, .L46
 584              	.L40:
 158:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 585              		.loc 1 158 3 is_stmt 1 view .LVU119
 586 0042 0020     		movs	r0, #0
 587 0044 FFF7FEFF 		bl	IWDG_feed
 588              	.LVL55:
 176:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   uint8_t use_lora = 1;
 589              		.loc 1 176 3 view .LVU120
 177:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 18


 590              		.loc 1 177 3 view .LVU121
 179:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   while (1)
 591              		.loc 1 179 3 view .LVU122
 179:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   while (1)
 592              		.loc 1 179 18 is_stmt 0 view .LVU123
 593 0048 244B     		ldr	r3, .L49+12
 594 004a 0122     		movs	r2, #1
 595 004c 1A70     		strb	r2, [r3]
 596 004e 25E0     		b	.L44
 597              	.LVL56:
 598              	.L46:
 599              	.LBB9:
 137:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 600              		.loc 1 137 5 is_stmt 1 view .LVU124
 601 0050 2348     		ldr	r0, .L49+16
 602 0052 FFF7FEFF 		bl	puts
 603              	.LVL57:
 604 0056 F4E7     		b	.L40
 605              	.LVL58:
 606              	.L47:
 137:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 607              		.loc 1 137 5 is_stmt 0 view .LVU125
 608              	.LBE9:
 609              	.LBB10:
 185:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     temperatureflag=0; 
 610              		.loc 1 185 5 is_stmt 1 view .LVU126
 611 0058 FFF7FEFF 		bl	temp_hum_measurement
 612              	.LVL59:
 186:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_GPIO_TogglePin(OCTA_RLED_GPIO_Port, OCTA_RLED_Pin);
 613              		.loc 1 186 5 view .LVU127
 186:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_GPIO_TogglePin(OCTA_RLED_GPIO_Port, OCTA_RLED_Pin);
 614              		.loc 1 186 20 is_stmt 0 view .LVU128
 615 005c 1F4B     		ldr	r3, .L49+12
 616 005e 0022     		movs	r2, #0
 617 0060 1A70     		strb	r2, [r3]
 187:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_Delay(1000);
 618              		.loc 1 187 5 is_stmt 1 view .LVU129
 619 0062 204C     		ldr	r4, .L49+20
 620 0064 4FF48041 		mov	r1, #16384
 621 0068 2046     		mov	r0, r4
 622 006a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 623              	.LVL60:
 188:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_GPIO_TogglePin(OCTA_RLED_GPIO_Port, OCTA_RLED_Pin);
 624              		.loc 1 188 5 view .LVU130
 625 006e 4FF47A70 		mov	r0, #1000
 626 0072 FFF7FEFF 		bl	HAL_Delay
 627              	.LVL61:
 189:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 628              		.loc 1 189 5 view .LVU131
 629 0076 4FF48041 		mov	r1, #16384
 630 007a 2046     		mov	r0, r4
 631 007c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 632              	.LVL62:
 633 0080 13E0     		b	.L41
 634              	.L48:
 635              	.LBE10:
 636              	.LBB11:
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 19


 193:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       Dash7_send(NULL);
 637              		.loc 1 193 7 view .LVU132
 193:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       Dash7_send(NULL);
 638              		.loc 1 193 17 is_stmt 0 view .LVU133
 639 0082 0020     		movs	r0, #0
 640 0084 184B     		ldr	r3, .L49+24
 641 0086 1870     		strb	r0, [r3]
 194:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       printf("Button pressed\r\n");
 642              		.loc 1 194 7 is_stmt 1 view .LVU134
 643 0088 FFF7FEFF 		bl	Dash7_send
 644              	.LVL63:
 195:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 645              		.loc 1 195 7 view .LVU135
 646 008c 1748     		ldr	r0, .L49+28
 647 008e FFF7FEFF 		bl	puts
 648              	.LVL64:
 649 0092 0EE0     		b	.L42
 650              	.L43:
 651              	.LBE11:
 235:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     
 652              		.loc 1 235 5 view .LVU136
 653 0094 4FF47A70 		mov	r0, #1000
 654 0098 FFF7FEFF 		bl	HAL_Delay
 655              	.LVL65:
 656              	.L44:
 180:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   { 
 657              		.loc 1 180 3 view .LVU137
 182:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 658              		.loc 1 182 5 view .LVU138
 659 009c 0020     		movs	r0, #0
 660 009e FFF7FEFF 		bl	IWDG_feed
 661              	.LVL66:
 184:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     temp_hum_measurement();
 662              		.loc 1 184 6 view .LVU139
 184:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     temp_hum_measurement();
 663              		.loc 1 184 25 is_stmt 0 view .LVU140
 664 00a2 0E4B     		ldr	r3, .L49+12
 665 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     temp_hum_measurement();
 666              		.loc 1 184 9 view .LVU141
 667 00a6 002B     		cmp	r3, #0
 668 00a8 D6D1     		bne	.L47
 669              	.L41:
 191:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****      // Dash7_send(NULL);
 670              		.loc 1 191 5 is_stmt 1 view .LVU142
 191:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****      // Dash7_send(NULL);
 671              		.loc 1 191 18 is_stmt 0 view .LVU143
 672 00aa 0F4B     		ldr	r3, .L49+24
 673 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 191:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****      // Dash7_send(NULL);
 674              		.loc 1 191 7 view .LVU144
 675 00ae 002B     		cmp	r3, #0
 676 00b0 E7D1     		bne	.L48
 677              	.L42:
 198:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 678              		.loc 1 198 5 is_stmt 1 view .LVU145
 198:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 20


 679              		.loc 1 198 8 is_stmt 0 view .LVU146
 680 00b2 0F4B     		ldr	r3, .L49+32
 681 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 198:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     {
 682              		.loc 1 198 7 view .LVU147
 683 00b6 002B     		cmp	r3, #0
 684 00b8 ECD0     		beq	.L43
 685              	.LBB12:
 200:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****       murata_data_ready = !Murata_process_fifo();
 686              		.loc 1 200 7 is_stmt 1 view .LVU148
 687 00ba 0E48     		ldr	r0, .L49+36
 688 00bc FFF7FEFF 		bl	puts
 689              	.LVL67:
 201:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 690              		.loc 1 201 7 view .LVU149
 201:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 691              		.loc 1 201 28 is_stmt 0 view .LVU150
 692 00c0 FFF7FEFF 		bl	Murata_process_fifo
 693              	.LVL68:
 201:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 694              		.loc 1 201 27 view .LVU151
 695 00c4 B0FA80F0 		clz	r0, r0
 696 00c8 4009     		lsrs	r0, r0, #5
 201:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     }
 697              		.loc 1 201 25 view .LVU152
 698 00ca 094B     		ldr	r3, .L49+32
 699 00cc 1870     		strb	r0, [r3]
 700 00ce E1E7     		b	.L43
 701              	.L50:
 702              		.align	2
 703              	.L49:
 704 00d0 00000000 		.word	short_UID
 705 00d4 00000000 		.word	common_I2C
 706 00d8 00000000 		.word	.LANCHOR0
 707 00dc 00000000 		.word	.LANCHOR4
 708 00e0 00000000 		.word	.LC9
 709 00e4 000C0048 		.word	1207962624
 710 00e8 00000000 		.word	.LANCHOR5
 711 00ec 24000000 		.word	.LC10
 712 00f0 00000000 		.word	.LANCHOR3
 713 00f4 34000000 		.word	.LC11
 714              	.LBE12:
 715              		.cfi_endproc
 716              	.LFE129:
 718              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 719              		.align	1
 720              		.global	HAL_GPIO_EXTI_Callback
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv4-sp-d16
 726              	HAL_GPIO_EXTI_Callback:
 727              	.LVL69:
 728              	.LFB137:
 356:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 357:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /* USER CODE END 4 */
 358:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 21


 359:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 	
 360:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** //hier de callback die zul das willen opgeroepen als de EXTI15_10 interrupt opvangt. 
 361:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 729              		.loc 1 361 48 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 362:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   if (GPIO_Pin== GPIO_Pin_13) {
 734              		.loc 1 362 3 view .LVU154
 735              		.loc 1 362 6 is_stmt 0 view .LVU155
 736 0000 B0F5005F 		cmp	r0, #8192
 737 0004 02D0     		beq	.L54
 738              	.L52:
 363:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   temperatureflag = 1; 
 364:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   // we work with a flag so as to make sure that we don't stay in the callback for too long. 
 365:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   // the flag will call the measurement function 
 366:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   } 
 367:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   if( GPIO_Pin == OCTA_BTN1_Pin){
 739              		.loc 1 367 3 is_stmt 1 view .LVU156
 740              		.loc 1 367 5 is_stmt 0 view .LVU157
 741 0006 0128     		cmp	r0, #1
 742 0008 04D0     		beq	.L55
 743              	.L51:
 368:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     buttonFlag = 1;
 369:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 370:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 744              		.loc 1 370 1 view .LVU158
 745 000a 7047     		bx	lr
 746              	.L54:
 363:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   temperatureflag = 1; 
 747              		.loc 1 363 3 is_stmt 1 view .LVU159
 363:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   temperatureflag = 1; 
 748              		.loc 1 363 19 is_stmt 0 view .LVU160
 749 000c 034B     		ldr	r3, .L56
 750 000e 0122     		movs	r2, #1
 751 0010 1A70     		strb	r2, [r3]
 752 0012 F8E7     		b	.L52
 753              	.L55:
 368:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     buttonFlag = 1;
 754              		.loc 1 368 5 is_stmt 1 view .LVU161
 368:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     buttonFlag = 1;
 755              		.loc 1 368 16 is_stmt 0 view .LVU162
 756 0014 024B     		ldr	r3, .L56+4
 757 0016 0122     		movs	r2, #1
 758 0018 1A70     		strb	r2, [r3]
 759              		.loc 1 370 1 view .LVU163
 760 001a F6E7     		b	.L51
 761              	.L57:
 762              		.align	2
 763              	.L56:
 764 001c 00000000 		.word	.LANCHOR4
 765 0020 00000000 		.word	.LANCHOR5
 766              		.cfi_endproc
 767              	.LFE137:
 769              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 770              		.align	1
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 22


 771              		.global	HAL_TIM_PeriodElapsedCallback
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv4-sp-d16
 777              	HAL_TIM_PeriodElapsedCallback:
 778              	.LVL70:
 779              	.LFB138:
 371:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 372:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 373:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 374:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /**
 375:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @brief  Period elapsed callback in non blocking mode
 376:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 377:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 378:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * a global variable "uwTick" used as application time base.
 379:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @param  htim : TIM handle
 380:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @retval None
 381:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   */
 382:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 383:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** {
 780              		.loc 1 383 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		.loc 1 383 1 is_stmt 0 view .LVU165
 785 0000 08B5     		push	{r3, lr}
 786              	.LCFI12:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 3, -8
 789              		.cfi_offset 14, -4
 384:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN Callback 0 */
 385:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 386:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END Callback 0 */
 387:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   if (htim->Instance == TIM1)
 790              		.loc 1 387 3 is_stmt 1 view .LVU166
 791              		.loc 1 387 11 is_stmt 0 view .LVU167
 792 0002 0268     		ldr	r2, [r0]
 793              		.loc 1 387 6 view .LVU168
 794 0004 034B     		ldr	r3, .L62
 795 0006 9A42     		cmp	r2, r3
 796 0008 00D0     		beq	.L61
 797              	.LVL71:
 798              	.L58:
 388:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   {
 389:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****     HAL_IncTick();
 390:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 391:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN Callback 1 */
 392:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 393:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END Callback 1 */
 394:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 799              		.loc 1 394 1 view .LVU169
 800 000a 08BD     		pop	{r3, pc}
 801              	.LVL72:
 802              	.L61:
 389:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   }
 803              		.loc 1 389 5 is_stmt 1 view .LVU170
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 23


 804 000c FFF7FEFF 		bl	HAL_IncTick
 805              	.LVL73:
 806              		.loc 1 394 1 is_stmt 0 view .LVU171
 807 0010 FBE7     		b	.L58
 808              	.L63:
 809 0012 00BF     		.align	2
 810              	.L62:
 811 0014 002C0140 		.word	1073818624
 812              		.cfi_endproc
 813              	.LFE138:
 815              		.section	.text.Error_Handler,"ax",%progbits
 816              		.align	1
 817              		.global	Error_Handler
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 821              		.fpu fpv4-sp-d16
 823              	Error_Handler:
 824              	.LFB139:
 395:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 396:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** /**
 397:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @brief  This function is executed in case of error occurrence.
 398:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   * @retval None
 399:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   */
 400:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** void Error_Handler(void)
 401:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** {
 825              		.loc 1 401 1 is_stmt 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 402:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 403:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* User can add his own implementation to report the HAL error return state */
 404:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** 
 405:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c ****   /* USER CODE END Error_Handler_Debug */
 406:../../applications/murata-dualstack-example-ns/src/murata-dualstack-example-ns.c **** }
 830              		.loc 1 406 1 view .LVU173
 831 0000 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE139:
 835              		.global	buttonFlag
 836              		.global	temperatureflag
 837              		.comm	SHTData,8,4
 838              		.global	murata_data_ready
 839              		.comm	short_UID,8,8
 840              		.global	murata_init
 841              		.global	DASH7_Counter
 842              		.global	LoRaWAN_Counter
 843              		.comm	threadToNotify,4,4
 844              		.comm	murata_reset_pin,4,4
 845              		.comm	murata_wakeup_pin,4,4
 846              		.comm	temp,4,4
 847              		.comm	humidity,4,4
 848              		.comm	_i2caddr,1,1
 849              		.comm	SHThi2cLib,4,4
 850              		.comm	magRawData,6,4
 851              		.comm	magRegisterData,6,4
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 24


 852              		.comm	accRawData,6,4
 853              		.comm	accRegisterData,6,4
 854              		.comm	LSM303AGR_hi2c,4,4
 855              		.comm	LSM303AGR_setting,1,1
 856              		.comm	murata_rx_process_mutex_id,4,4
 857              		.comm	txMutexId,4,4
 858              		.comm	moduleCheckTimId,4,4
 859              		.comm	dash7TimId,4,4
 860              		.comm	loraWANTimId,4,4
 861              		.comm	iwdgTimId,4,4
 862              		.comm	murata_rx_processing_handle,4,4
 863              		.comm	defaultTaskHandle,4,4
 864              		.comm	P3_header,44,4
 865              		.comm	P2_header,44,4
 866              		.comm	P1_header,44,4
 867              		.comm	FLASH_SPI,100,4
 868              		.comm	P3_SPI,100,4
 869              		.comm	P2_SPI,100,4
 870              		.comm	P1_SPI,100,4
 871              		.comm	P3_I2C,76,4
 872              		.comm	P2_I2C,76,4
 873              		.comm	P1_I2C,76,4
 874              		.comm	common_I2C,76,4
 875              		.comm	P3_UART,120,4
 876              		.comm	P2_UART,120,4
 877              		.comm	P1_UART,120,4
 878              		.comm	BLE_UART,120,4
 879              		.comm	USB_UART,120,4
 880              		.comm	hiwdg,16,4
 881              		.comm	P3_DIO6,8,4
 882              		.comm	P3_DIO5,8,4
 883              		.comm	P3_DIO4,8,4
 884              		.comm	P3_DIO3,8,4
 885              		.comm	P3_DIO2,8,4
 886              		.comm	P3_DIO1,8,4
 887              		.comm	P2_DIO6,8,4
 888              		.comm	P2_DIO5,8,4
 889              		.comm	P2_DIO4,8,4
 890              		.comm	P2_DIO3,8,4
 891              		.comm	P2_DIO2,8,4
 892              		.comm	P2_DIO1,8,4
 893              		.comm	P1_DIO6,8,4
 894              		.comm	P1_DIO5,8,4
 895              		.comm	P1_DIO4,8,4
 896              		.comm	P1_DIO3,8,4
 897              		.comm	P1_DIO2,8,4
 898              		.comm	P1_DIO1,8,4
 899              		.section	.bss.DASH7_Counter,"aw",%nobits
 900              		.align	1
 901              		.set	.LANCHOR2,. + 0
 904              	DASH7_Counter:
 905 0000 0000     		.space	2
 906              		.section	.bss.LoRaWAN_Counter,"aw",%nobits
 907              		.align	1
 908              		.set	.LANCHOR1,. + 0
 911              	LoRaWAN_Counter:
 912 0000 0000     		.space	2
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 25


 913              		.section	.bss.buttonFlag,"aw",%nobits
 914              		.set	.LANCHOR5,. + 0
 917              	buttonFlag:
 918 0000 00       		.space	1
 919              		.section	.bss.murata_data_ready,"aw",%nobits
 920              		.set	.LANCHOR3,. + 0
 923              	murata_data_ready:
 924 0000 00       		.space	1
 925              		.section	.bss.murata_init,"aw",%nobits
 926              		.set	.LANCHOR0,. + 0
 929              	murata_init:
 930 0000 00       		.space	1
 931              		.section	.bss.temperatureflag,"aw",%nobits
 932              		.set	.LANCHOR4,. + 0
 935              	temperatureflag:
 936 0000 00       		.space	1
 937              		.section	.rodata.LoRaWAN_send.str1.4,"aMS",%progbits,1
 938              		.align	2
 939              	.LC3:
 940 0000 6D757261 		.ascii	"murata not initialized, not sending\015\000"
 940      7461206E 
 940      6F742069 
 940      6E697469 
 940      616C697A 
 941              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 942              		.align	2
 943              	.LC9:
 944 0000 4D757261 		.ascii	"Murata dualstack module init OK\015\012\015\000"
 944      74612064 
 944      75616C73 
 944      7461636B 
 944      206D6F64 
 945 0023 00       		.space	1
 946              	.LC10:
 947 0024 42757474 		.ascii	"Button pressed\015\000"
 947      6F6E2070 
 947      72657373 
 947      65640D00 
 948              	.LC11:
 949 0034 70726F63 		.ascii	"processing murata fifo\015\000"
 949      65737369 
 949      6E67206D 
 949      75726174 
 949      61206669 
 950              		.section	.rodata.printWelcome.str1.4,"aMS",%progbits,1
 951              		.align	2
 952              	.LC4:
 953 0000 2A2A2A2A 		.ascii	"*****************************************\015\000"
 953      2A2A2A2A 
 953      2A2A2A2A 
 953      2A2A2A2A 
 953      2A2A2A2A 
 954 002b 00       		.space	1
 955              	.LC5:
 956 002c 4D757261 		.ascii	"Murata Dual Stack example without scheduler\015\000"
 956      74612044 
 956      75616C20 
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 26


 956      53746163 
 956      6B206578 
 957 0059 000000   		.space	3
 958              	.LC6:
 959 005c 6F637461 		.ascii	"octa ID: \000"
 959      2049443A 
 959      2000
 960 0066 0000     		.space	2
 961              	.LC7:
 962 0068 25303278 		.ascii	"%02x\000"
 962      00
 963 006d 000000   		.space	3
 964              	.LC8:
 965 0070 0D0A0D00 		.ascii	"\015\012\015\000"
 966              		.section	.rodata.print_temp_hum.str1.4,"aMS",%progbits,1
 967              		.align	2
 968              	.LC0:
 969 0000 0D00     		.ascii	"\015\000"
 970 0002 0000     		.space	2
 971              	.LC1:
 972 0004 54656D70 		.ascii	"Temperature: %.2f \302\260C  \015\012\000"
 972      65726174 
 972      7572653A 
 972      20252E32 
 972      6620C2B0 
 973 001e 0000     		.space	2
 974              	.LC2:
 975 0020 48756D69 		.ascii	"Humidity: %.2f %% \015\012\000"
 975      64697479 
 975      3A20252E 
 975      32662025 
 975      25200D0A 
 976              		.weak	SystemClock_Config
 977              		.text
 978              	.Letext0:
 979              		.file 2 "d:\\softwareunif\\toolchainkit\\8 2019-q3-update\\arm-none-eabi\\include\\machine\\_defau
 980              		.file 3 "d:\\softwareunif\\toolchainkit\\8 2019-q3-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 981              		.file 4 "../../core/ST/CMSIS/Include/core_cm4.h"
 982              		.file 5 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 983              		.file 6 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 984              		.file 7 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 985              		.file 8 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 986              		.file 9 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 987              		.file 10 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_iwdg.h"
 988              		.file 11 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 989              		.file 12 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 990              		.file 13 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 991              		.file 14 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 992              		.file 15 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 993              		.file 16 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 994              		.file 17 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 995              		.file 18 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 996              		.file 19 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 997              		.file 20 "../../core/platform/octa/inc/gpio.h"
 998              		.file 21 "../../core/platform/octa/inc/iwdg.h"
 999              		.file 22 "../../core/platform/octa/inc/uart.h"
 1000              		.file 23 "../../core/platform/octa/inc/i2c.h"
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 27


 1001              		.file 24 "../../core/platform/octa/inc/spi.h"
 1002              		.file 25 "../../core/platform/octa/inc/octa.h"
 1003              		.file 26 "../../applications/murata-dualstack-example-ns/inc/murata-dualstack-example-ns.h"
 1004              		.file 27 "../../core/drivers/LSM303AGR/inc/LSM303AGRSensor.h"
 1005              		.file 28 "../../core/drivers/SHT31/inc/sht31.h"
 1006              		.file 29 "../../shields/Murata-dualstack/inc/murata.h"
 1007              		.file 30 "<built-in>"
 1008              		.file 31 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1009              		.file 32 "../../core/platform/octa/inc/sysclock.h"
 1010              		.file 33 "../../core/platform/common/inc/platform.h"
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 murata-dualstack-example-ns.c
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:19     .text.print_temp_hum:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:27     .text.print_temp_hum:00000000 print_temp_hum
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:76     .text.print_temp_hum:00000034 $d
                            *COM*:00000008 SHTData
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:84     .text.temp_hum_measurement:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:91     .text.temp_hum_measurement:00000000 temp_hum_measurement
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:114    .text.temp_hum_measurement:00000010 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:119    .text.LoRaWAN_send:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:126    .text.LoRaWAN_send:00000000 LoRaWAN_send
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:230    .text.LoRaWAN_send:00000050 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:237    .text.Dash7_send:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:244    .text.Dash7_send:00000000 Dash7_send
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:324    .text.Dash7_send:00000034 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:332    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:339    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:376    .text.HAL_UART_RxCpltCallback:00000018 $d
                            *COM*:00000078 P1_UART
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:382    .text.vApplicationIdleHook:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:389    .text.vApplicationIdleHook:00000000 vApplicationIdleHook
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:402    .text.printWelcome:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:409    .text.printWelcome:00000000 printWelcome
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:506    .text.printWelcome:00000070 $d
                            *COM*:00000008 short_UID
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:518    .text.main:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:525    .text.main:00000000 main
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:704    .text.main:000000d0 $d
                            *COM*:0000004c common_I2C
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:719    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:726    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:764    .text.HAL_GPIO_EXTI_Callback:0000001c $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:770    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:777    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:811    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:816    .text.Error_Handler:00000000 $t
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:823    .text.Error_Handler:00000000 Error_Handler
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:917    .bss.buttonFlag:00000000 buttonFlag
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:935    .bss.temperatureflag:00000000 temperatureflag
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:923    .bss.murata_data_ready:00000000 murata_data_ready
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:929    .bss.murata_init:00000000 murata_init
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:904    .bss.DASH7_Counter:00000000 DASH7_Counter
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:911    .bss.LoRaWAN_Counter:00000000 LoRaWAN_Counter
                            *COM*:00000004 threadToNotify
                            *COM*:00000004 murata_reset_pin
                            *COM*:00000004 murata_wakeup_pin
                            *COM*:00000004 temp
                            *COM*:00000004 humidity
                            *COM*:00000001 _i2caddr
                            *COM*:00000004 SHThi2cLib
                            *COM*:00000006 magRawData
                            *COM*:00000006 magRegisterData
                            *COM*:00000006 accRawData
                            *COM*:00000006 accRegisterData
                            *COM*:00000004 LSM303AGR_hi2c
                            *COM*:00000001 LSM303AGR_setting
                            *COM*:00000004 murata_rx_process_mutex_id
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 29


                            *COM*:00000004 txMutexId
                            *COM*:00000004 moduleCheckTimId
                            *COM*:00000004 dash7TimId
                            *COM*:00000004 loraWANTimId
                            *COM*:00000004 iwdgTimId
                            *COM*:00000004 murata_rx_processing_handle
                            *COM*:00000004 defaultTaskHandle
                            *COM*:0000002c P3_header
                            *COM*:0000002c P2_header
                            *COM*:0000002c P1_header
                            *COM*:00000064 FLASH_SPI
                            *COM*:00000064 P3_SPI
                            *COM*:00000064 P2_SPI
                            *COM*:00000064 P1_SPI
                            *COM*:0000004c P3_I2C
                            *COM*:0000004c P2_I2C
                            *COM*:0000004c P1_I2C
                            *COM*:00000078 P3_UART
                            *COM*:00000078 P2_UART
                            *COM*:00000078 BLE_UART
                            *COM*:00000078 USB_UART
                            *COM*:00000010 hiwdg
                            *COM*:00000008 P3_DIO6
                            *COM*:00000008 P3_DIO5
                            *COM*:00000008 P3_DIO4
                            *COM*:00000008 P3_DIO3
                            *COM*:00000008 P3_DIO2
                            *COM*:00000008 P3_DIO1
                            *COM*:00000008 P2_DIO6
                            *COM*:00000008 P2_DIO5
                            *COM*:00000008 P2_DIO4
                            *COM*:00000008 P2_DIO3
                            *COM*:00000008 P2_DIO2
                            *COM*:00000008 P2_DIO1
                            *COM*:00000008 P1_DIO6
                            *COM*:00000008 P1_DIO5
                            *COM*:00000008 P1_DIO4
                            *COM*:00000008 P1_DIO3
                            *COM*:00000008 P1_DIO2
                            *COM*:00000008 P1_DIO1
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:900    .bss.DASH7_Counter:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:907    .bss.LoRaWAN_Counter:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:918    .bss.buttonFlag:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:924    .bss.murata_data_ready:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:930    .bss.murata_init:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:936    .bss.temperatureflag:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:938    .rodata.LoRaWAN_send.str1.4:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:942    .rodata.main.str1.4:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:951    .rodata.printWelcome.str1.4:00000000 $d
C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s:967    .rodata.print_temp_hum.str1.4:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
puts
printf
SHT31_get_temp_hum
Murata_LoRaWAN_Send
ARM GAS  C:\Users\WILKOM~1\AppData\Local\Temp\ccuDXAdk.s 			page 30


Murata_Dash7_Send
Murata_rxCallback
HAL_GPIO_TogglePin
HAL_Delay
HAL_Init
SystemClock_Config
Initialize_Platform
get_UID
LSM303AGR_setI2CInterface
setI2CInterface_SHT31
SHT31_begin
LSM303AGR_init
Murata_Initialize
IWDG_feed
Murata_process_fifo
HAL_IncTick
